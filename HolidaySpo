package com.holidayspot.controller;

import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.holidayspot.pojo.HotelDetails;

/**
 * Servlet implementation class HolidaySpot
 */
@WebServlet("/HolidaySpot")
public class HolidaySpot extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public HolidaySpot() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) {
		try {
			com.holidayspot.model.HolidaySpot holidaySpot = new com.holidayspot.model.HolidaySpot();
			String event = request.getParameter("event");
			// login Controller
			if ("login".equals(event)) {
				String userid = request.getParameter("userid");
				String password = request.getParameter("pwd");
				boolean loginFlag = false;
				loginFlag = holidaySpot.login(userid, password);

				if (loginFlag) {
					HttpSession session = request.getSession();
					session.setAttribute("userid", userid);
					List<HotelDetails> hotelDetails = holidaySpot
							.getHotelDetails();
					request.setAttribute("hotelDetails", hotelDetails);
					RequestDispatcher dispatcher = request
					.getRequestDispatcher("/admin.jsp");
			dispatcher.forward(request, response);
				} else {
					RequestDispatcher dispatcher = request
							.getRequestDispatcher("/login.jsp");
					dispatcher.forward(request, response);
				}
			}
			
		else if ("roomtype".equals(event))
		{
			String hotelId=request.getParameter("hotleId");
			List<HotelDetails> hotelDetails = holidaySpot.getallRooms(hotelId);
			request.setAttribute("roomdetails", hotelDetails);
			RequestDispatcher dispatcher = request
					.getRequestDispatcher("/roomtype.jsp?hotelId="+hotelId);
			dispatcher.forward(request, response);
			request.setAttribute("hotelId", hotelId);
		}
		else if("roomrequest".equals(event))
		{
			String hotelId = request.getParameter("hotelId");
			String type = request.getParameter("roomType");
			String noOfRooms = request.getParameter("noOfRooms");
			String uique = holidaySpot.updateAvailability(hotelId, type, noOfRooms);
			request.setAttribute("customerid", uique);
			RequestDispatcher dispatcher = request
			.getRequestDispatcher("/customerid.jsp?custId="+uique);
			dispatcher.forward(request, response);
		}
		else if("checkStatus".equals(event))
		{
			String custId=request.getParameter("custId");
			boolean bookflag=holidaySpot.checkStatus(custId);
			if(bookflag)
			{
			RequestDispatcher dispatcher = request
			.getRequestDispatcher("/roomavailable.jsp?");
			dispatcher.forward(request, response);
			}
		}
		else if("book".equals(event))
		{
			String custId=request.getParameter("custId");
			RequestDispatcher dispatcher = request
			.getRequestDispatcher("/bookroom.jsp?custId="+custId);
			dispatcher.forward(request, response);
		}
		else if("logout".equals(event)){
			HttpSession session =request.getSession();
			session.invalidate();
			RequestDispatcher dispatcher = request
			.getRequestDispatcher("/index.jsp");
			dispatcher.forward(request, response);
		}
		else if("hotels".equals(event))
		{
			List<HotelDetails> hotelDetails = holidaySpot.getallHotels();
			request.setAttribute("hoteldetails", hotelDetails);
			RequestDispatcher dispatcher = request
					.getRequestDispatcher("/roomrequest.jsp");
			dispatcher.forward(request, response);
		}
		else if("Proceed Pay".equals(event))
		{
			String custid=request.getParameter("custid");
			String mobile =request.getParameter("mobile");
			String email =request.getParameter("email");
			String address =request.getParameter("address");
			String pan =request.getParameter("pan");
			String cc =request.getParameter("cc");
			String bank =request.getParameter("bank");
			String branch =request.getParameter("branch");
			String cvv =request.getParameter("cvv");
			holidaySpot.insertAvailability(custid,mobile,email,address,pan,cc,bank,branch,cvv);
			RequestDispatcher dispatcher = request
			.getRequestDispatcher("/roomrequest.jsp");
			dispatcher.forward(request, response);
		}
		else if("cancel".equals(event))
		{
			String custid=request.getParameter("custId");
			holidaySpot.cancelRequest(custid);
			RequestDispatcher dispatcher = request
			.getRequestDispatcher("/index.jsp");
			dispatcher.forward(request, response);
		}
			else if("otherrooms".equals(event))
			{
				String custid=request.getParameter("custId");
				holidaySpot.cancelRequest(custid);
				RequestDispatcher dispatcher = request
				.getRequestDispatcher("/index.jsp");
				dispatcher.forward(request, response);
			}
			else if("confirm".equals(event))
			{
				String custid=request.getParameter("custId");
				holidaySpot.confirmRequest(custid);
				RequestDispatcher dispatcher = request
				.getRequestDispatcher("/index.jsp");
				dispatcher.forward(request, response);
			}
	}
		catch (Exception e) {
			e.printStackTrace();
		}

	}
}
